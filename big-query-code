/* 

PREPARING DATA

The database used is BigQuery | Google Cloud.


--Using UNION ALL to merge 12 monthly individual tables into one single dataframe for the year of 2021.

SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Jan_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Feb_2021`
UNION ALL
SELECT
  *
FROM 
  `case-study-bike-share-374222.bikeshare_2021_dataset.Mar_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Apr_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.May_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Jun_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Jul_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Aug_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Sep_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Oct_2021`
UNION ALL
SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Nov_2021`
UNION ALL
SELECT
  *
  FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.Dec_2021`


--INSPECTING THE DATA
--EXTRACT () & CASE () & TIMESTAMP_DIFF() TO EXTRACT ‘DAYOFWEEK’ FROM DATE FORMAT AND ASSIGN NUMERICS TO NEW TABLE AND CREATE ride_length COLUMN

SELECT
  ride_id, 
CASE  
  WHEN EXTRACT (MONTH FROM (started_at)) = 1 THEN 'JANURARY'
  WHEN EXTRACT (MONTH FROM (started_at)) = 2 THEN 'FEBURARY'
  WHEN EXTRACT (MONTH FROM (started_at)) = 3 THEN 'MARCH'
  WHEN EXTRACT (MONTH FROM (started_at)) = 4 THEN 'APRIL'
  WHEN EXTRACT (MONTH FROM (started_at)) = 5 THEN 'MAY'
  WHEN EXTRACT (MONTH FROM (started_at)) = 6 THEN 'JUNE'
  WHEN EXTRACT (MONTH FROM (started_at)) = 7 THEN 'JULY'
  WHEN EXTRACT (MONTH FROM (started_at)) = 8 THEN 'AUGUST'
  WHEN EXTRACT (MONTH FROM (started_at)) = 9 THEN 'SEPTEMBER'
  WHEN EXTRACT (MONTH FROM (started_at)) = 10 THEN 'OCTOBER'
  WHEN EXTRACT (MONTH FROM (started_at)) = 11 THEN 'NOVEMBER'
  WHEN EXTRACT (MONTH FROM (started_at)) = 12 THEN 'DECEMBER'
END month,

CASE
  WHEN EXTRACT(DAYOFWEEK from started_at) = 1 THEN 'Sunday'
  WHEN EXTRACT(DAYOFWEEK from started_at) = 2 THEN 'Monday'
  WHEN EXTRACT(DAYOFWEEK from started_at) = 3 THEN 'Tuesday'
  WHEN EXTRACT(DAYOFWEEK from started_at) = 4 THEN 'Wednesday'
  WHEN EXTRACT(DAYOFWEEK from started_at) = 5 THEN 'Thursday'
  WHEN EXTRACT(DAYOFWEEK from started_at) = 6 THEN 'Friday'
  WHEN EXTRACT(DAYOFWEEK from started_at) = 7 THEN 'Saturday'
END AS day_of_week,
  TIMESTAMP_DIFF(ended_at, started_at, minute) AS ride_length,
  CONCAT(start_station_name, " to " , end_station_name) as route, member_casual as user_type
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.union_df`
  
  
--CALCULATING SIZE OF DATASET 
--TOTAL TRIPS = 5,595,063

SELECT
  COUNT(*)
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.union_df`
  
  
-DATAFRAME union_RL created for analysis

  
--SORT ride_length BY ASCENDING ORDER TO VIEW NEGATIVES

SELECT 
 ride_length
FROM 
 `case-study-bike-share-374222.bikeshare_2021_dataset.union_rl`
ORDER BY 
 ride_length ASC

  
--DELETING ROWS UNDER 1 MINUTE & NEGATIVES
--This statement removed 85,233 rows from union_RL.

SELECT
  *
FROM
  `case-study-bike-share-374222.bikeshare_2021_dataset.union_RL`
WHERE
  ride_length < 1;
DELETE FROM
 `case-study-bike-share-374222.bikeshare_2021_dataset.union_RL` 
WHERE
 ride_length < 1;
 

--LOOKING FOR DUPLICATE VALUES IN ONE COLUMN (ride_id)
--NO DUPLICATES

SELECT 
 ride_id, COUNT(ride_id)
FROM 
 `case-study-bike-share-374222.bikeshare_2021_dataset.union_RL`
GROUP BY 
 ride_id
HAVING COUNT(ride_id) > 1;

--NEW COUNT
--TOTAL TRIPS = 5,509,830

SELECT 
 COUNT(*)
FROM `case-study-bike-share-374222.bikeshare_2021_dataset.union_RL`


--CONCAT start_station_name & end_station_name COUNT

SELECT 
 route, COUNT(route)
FROM 
 `case-study-bike-share-374222.bikeshare_2021_dataset.union_RL`
GROUP BY 
  route
HAVING COUNT(route) > 1

--ANALYSIS
 
--IDENTIFYING NULLS (ride_id,rideable_type,started_at,ended_at,member_casual,ride_length for analyis ONLY)
--THERE IS NONE

SELECT 
 SUM(CASE WHEN ride_id is NULL THEN 1 ELSE 0 END) AS ride_id_null,
 SUM(CASE WHEN rideable_type is NULL THEN 1 ELSE 0 END) AS rideable_type_null,
 SUM(CASE WHEN started_at is NULL THEN 1 ELSE 0 END) AS started_at_null,
 SUM(CASE WHEN ended_at is NULL THEN 1 ELSE 0 END) AS ended_at_null,
 SUM(CASE WHEN member_casual is NULL THEN 1 ELSE 0 END) AS member_casual_null,
 SUM(CASE WHEN ride_length is NULL THEN 1 ELSE 0 END) AS ride_length_null
FROM 
 `case-study-bike-share-374222.bikeshare_2021_dataset.2021_df`
 
 
--# OF RIDES PER BIKE TYPE 
SELECT 
 rideable_type, 
COUNT
 (rideable_type) as number_of_rides, member_casual
FROM
 `case-study-bike-share-374222.bikeshare_2021_dataset.union_df`
GROUP BY 
 rideable_type, member_casual

 
 --# OF MEMBER VS CASUAL RIDES
 
SELECT 
 member_casual, COUNT(member_casual) as number_of_rides
FROM
`case-study-bike-share-374222.bikeshare_2021_dataset.union_df`
GROUP BY
 member_casual

  
--# OF USER TYPE RIDES PER MONTH 2021
 SELECT
count (month) as month_of_2021, month,
user_type
FROM 
  `case-study-bike-share-374222.bikeshare_2021_dataset.union_RL`
Group by 
user_type, month
order by user_type, month_of_2021 DESC

--# OF USER TYPE RIDES PER WEEKDAY

SELECT day_of_week,user_type, COUNT(*) as Weekday_Rides
FROM `case-study-bike-share-374222.bikeshare_2021_dataset.union_RL`
GROUP BY day_of_week, user_type
ORDER BY
CASE day_of_week
WHEN 'Sunday' THEN 1
WHEN 'Monday' then 2
WHEN 'Tuesday' then 3
WHEN 'Wednesday' then 4
WHEN 'Thursday' then 5
WHEN 'Friday' then 6
ELSE 7
END ASC

--# USER TYPE AVG DAILY 

SELECT day_of_week,user_type, ROUND(AVG(ride_length),2) AS average_time
FROM `case-study-bike-share-374222.bikeshare_2021_dataset.union_RL`
GROUP BY day_of_week, user_type
ORDER BY
CASE day_of_week
WHEN 'Sunday' THEN 1
WHEN 'Monday' then 2
WHEN 'Tuesday' then 3
WHEN 'Wednesday' then 4
WHEN 'Thursday' then 5
WHEN 'Friday' then 6
ELSE 7
END ASC

--TOP 20 MOST POPULAR ROUTES

SELECT
ROUTE,
COUNT (ROUTE) AS NUMBER_OF_RIDES,USER_TYPE
FROM
`case-study-bike-share-374222.bikeshare_2021_dataset.union_RL`
group by route, user_type
order by number_of_rides DESC
limit 20

